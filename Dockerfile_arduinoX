# Use an official Ubuntu base image
FROM ubuntu:20.04

# Set environment variables to avoid interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# Update the package list and install necessary dependencies
RUN apt-get update && \
    apt-get install -y \
    wget \
    fuse \
    libfuse2 \
    libgtk-3-dev \
    libcanberra-gtk-module \
    build-essential \
    sudo \
    curl \
    git \
    libx11-6 \
    libxext6 \
    libxtst6 \
    libxrender1 \
    libxrandr2 \
    libfreetype6 \
    libfontconfig1 \
    libsecret-1-dev  \
    openjdk-11-jdk \
    libgl1-mesa-glx \
    xz-utils

# Download and set up Arduino IDE
RUN mkdir -p /opt/arduino && \
    wget https://downloads.arduino.cc/arduino-ide/arduino-ide_2.3.3_Linux_64bit.AppImage -O /opt/arduino/arduino-ide.AppImage && \
    chmod +x /opt/arduino/arduino-ide.AppImage

# Install FUSE to allow AppImage to run
RUN echo "user_allow_other" >> /etc/fuse.conf

# Create a user to avoid running as root
RUN useradd -m -d /home/arduino -s /bin/bash arduino && \
    echo "arduino ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Set up home directory and permissions
RUN mkdir -p /home/arduino/.config && \
    chown -R arduino:arduino /home/arduino && \
    chown -R arduino:arduino /opt/arduino

# Switch to non-root user
USER arduino
WORKDIR /home/arduino

# Default command to open Arduino IDE (headless mode or normal mode can be configured later)
CMD ["/bin/bash"]
# docker build -t arduino-ide-appimage .
# xhost +local:docker
# docker run --rm --privileged --device /dev/fuse   -e DISPLAY=$DISPLAY   -v /tmp/.X11-unix:/tmp/.X11-unix   -v /run/dbus/system_bus_socket:/run/dbus/system_bus_socket   --dns 8.8.8.8 --dns 8.8.4.4   -it arduino-ide-appimage
